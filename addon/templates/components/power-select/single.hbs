{{#basic-dropdown class=(readonly concatenatedClasses) dir=(readonly dir) tabindex=(readonly tabindex) renderInPlace=(readonly renderInPlace) matchTriggerWidth=true
  disabled=(readonly disabled) dropdownPosition=(readonly dropdownPosition) triggerClass=(readonly concatenatedTriggerClasses) dropdownClass=(readonly concatenatedDropdownClasses)
  opened=opened onOpen=(action onOpen) onClose=(action onClose) onFocus=(action "handleFocus") onKeydown=(action "handleKeydown") registerActionsInParent=(action "registerDropdown") as |dropdown|}}
  {{#with (hash
    isOpen=dropdown.isOpen
    actions=(hash
      open=(action "open" dropdown)
      close=(action "close" dropdown)
      select=(action "select" dropdown)
      highlight=(action "highlight" dropdown)
      search=(action "search" dropdown)
      clear=(if allowClear (action "select" dropdown null))
      handleKeydown=(action "handleKeydown" dropdown)
    )) as |select|}}
    {{#if searchEnabled}}
      <div class="ember-power-select-search">
        <input type="search" autocomplete="off" autocorrect="off" autocapitalize="off"
        spellcheck="false" role="textbox" oninput={{action select.actions.search value="target.value"}}
        onkeydown={{select.actions.handleKeydown}} placeholder={{searchPlaceholder}}>
      </div>

    {{/if}}
      {{#if showLoadingMessage}}
        <ul class="ember-power-select-options"><li class="ember-power-select-option">{{loadingMessage}}</li></ul>
      {{/if}}
      {{#if resultsLength}}
        {{#component optionsComponent options=(readonly results) highlighted=(readonly highlighted)
          selection=(readonly selection) optionsComponent=(readonly optionsComponent) searchText=(readonly searchText)
          select=(readonly select) extra=(readonly extra)
          class="ember-power-select-options" as |option term|}}
          {{yield option term}}
        {{/component}}
      {{else if mustShowSearchMessage}}
        <ul class="ember-power-select-options"><li class="ember-power-select-option">{{searchMessage}}</li></ul>
      {{else if results.isFulfilled}}
        {{yield to="inverse"}}
      {{/if}}
  {{/with}}
{{else}}
  {{#with (hash
    isOpen=registeredDropdown.isOpen
    actions=(hash
      open=(action "open" registeredDropdown)
      close=(action "close" registeredDropdown)
      select=(action "select" registeredDropdown)
      highlight=(action "highlight" registeredDropdown)
      search=(action "search" registeredDropdown)
      clear=(if allowClear (action "select" registeredDropdown null))
      handleKeydown=(action "handleKeydown" registeredDropdown)
    )) as |select|}}
    {{#component selectedComponent options=(readonly results) selection=(readonly selection) searchText=(readonly searchText)
      placeholder=(readonly placeholder) disabled=(readonly disabled) highlighted=(readonly highlighted)
      select=(readonly select) extra=(readonly extra) as |opt term|}}
      {{yield opt term}}
    {{/component}}
  {{/with}}
{{/basic-dropdown}}
