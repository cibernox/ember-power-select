{{#basic-dropdown
  class=(readonly concatenatedClasses)
  dir=(readonly dir)
  tabindex=(readonly tabindex)
  renderInPlace=(readonly renderInPlace)
  matchTriggerWidth=matchTriggerWidth
  disabled=(readonly disabled)
  verticalPosition=(readonly verticalPosition)
  horizontalPosition=(readonly horizontalPosition)
  triggerClass=(readonly concatenatedTriggerClasses)
  dropdownClass=(readonly concatenatedDropdownClasses)
  destination=(readonly destination)
  initiallyOpened=initiallyOpened
  triggerId=triggerId
  onOpen=(action "handleOpen")
  onClose=(action "handleClose")
  onFocus=(action "handleFocus")
  onKeydown=(action "handleKeydown")
  registerActionsInParent=(action "registerDropdown") as |dropdown|}}
  {{component beforeOptionsComponent
    searchText=(readonly searchText)
    onkeydown=(readonly onkeydown)
    select=(readonly publicAPI)
    handleInput=(action "handleInput")
    searchPlaceholder=(readonly searchPlaceholder)
    searchEnabled=(readonly searchEnabled)
    highlighted=(readonly highlighted)
    listboxId=(readonly optionsId)
    extra=(readonly extra)
    eventSender=eventSender}}
  {{#if mustShowSearchMessage}}
    <ul class="ember-power-select-options" role="listbox"><li class="ember-power-select-option ember-power-select-option--search-message" role="option">{{searchMessage}}</li></ul>
  {{else if mustShowNoMessages}}
    {{#if (hasBlock "inverse")}}
      {{yield to="inverse"}}
    {{else if noMatchesMessage}}
      <ul class="ember-power-select-options" role="listbox"><li class="ember-power-select-option ember-power-select-option--no-matches-message" role="option">{{noMatchesMessage}}</li></ul>
    {{/if}}
  {{else}}
    {{#component optionsComponent
      options=(readonly results)
      loading=(readonly loading)
      allOptions=(readonly results)
      highlighted=(readonly highlighted)
      selected=(readonly resolvedSelected)
      optionsComponent=(readonly optionsComponent)
      searchText=(readonly searchText)
      lastSearchedText=(readonly lastSearchedText)
      select=(readonly publicAPI)
      extra=(readonly extra)
      id=(readonly optionsId)
      groupIndex=""
      aria-controls=(readonly triggerId)
      loadingMessage=(readonly loadingMessage)
      class="ember-power-select-options" as |option term|}}
      {{yield option term}}
    {{/component}}
  {{/if}}
  {{component afterOptionsComponent
    select=(readonly publicAPI)
    searchPlaceholder=(readonly searchPlaceholder)
    searchEnabled=(readonly searchEnabled)
    extra=(readonly extra)}}
{{else}}
  {{#component triggerComponent
    options=(readonly results)
    selected=(readonly resolvedSelected)
    searchText=(readonly searchText)
    lastSearchedText=(readonly lastSearchedText)
    placeholder=(readonly placeholder)
    disabled=(readonly disabled)
    handleInput=(action "handleInput")
    allowClear=(readonly allowClear)
    select=(readonly publicAPI)
    extra=(readonly extra)
    buildSelection=(readonly buildSelection)
    onkeydown=(readonly onkeydown)
    listboxId=(readonly optionsId)
    selectedItemComponent=(readonly selectedItemComponent)
    searchEnabled=(readonly searchEnabled)
    loading=(readonly loading)
    searchField=(readonly searchField) as |opt term|}}
    {{yield opt term}}
  {{/component}}
{{/basic-dropdown}}
