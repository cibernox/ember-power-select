<h1 class="doc-page-title">The trigger</h1>

<p>
  The trigger is the only part of the select that is always visible and the area that will
  get more interaction from the user so it's not a surprise that it can be customized in
  many ways.
</p>

<h3>Disable the component</h3>

<p>
  You can completely disable the trigger (and therefore the entire component) by passing
  <code>disabled=true</code>.
</p>

<CodeExample @hbs="the-trigger-1.hbs" @js="the-trigger-1-js.js" as |partialName|>
  {{partial partialName}}
</CodeExample>

<h3>The selected option</h3>

<p>
  As we saw in the <a href={{href-to "public-pages.docs.how-to-use-it"}}>How to use it</a> section, Ember Power Select
  will reuse the same block used for each element of the list for the content of the trigger, both
  in normal and multiple mode, but this is something you can also customize if you need to.
</p>

<p>
  Since we have run out of block to pass the the component we need to use other components if we want to
  go any further. Pass <code>selectedItemComponent="component-name"</code> to the component.
</p>

<p>
  Within that component you have access to an <code>option</code> property that contains the selected option. In multiple
  selects the <code>selectedItemComponent</code> component is rendered as once per each selected option.
</p>

<CodeExample @hbs="the-trigger-2.hbs" @js="the-trigger-2-js.js" as |partialName|>
  {{partial partialName}}
</CodeExample>

<h3>Set a placeholder</h3>

<p>
  If you pass <code>placeholder="Some text"</code> to the component that message will be displayed
  in the trigger when no value has been selected.
</p>

<CodeExample @hbs="the-trigger-3.hbs" @js="the-trigger-3-js.js" as |partialName|>
  {{partial partialName}}
</CodeExample>

Take into account that in the multiple selects with search enabled, the trigger contains a searchbox
and you should use the <code>searchPlaceholder</code> option instead. Check <a href={{href-to "public-pages.docs.the-search"}}>The search</a>
section for more info.

<h3>Set a complex placeholder</h3>

<p>
  Sometimes a simple string as placeholder is not enough and you want bold text, icons and such. In
  that case you can pass a <code>placeholderComponent</code>, on which you can do pretty much anything.
</p>

<CodeExample @hbs="the-trigger-4.hbs" @hbs2="the-trigger-4-hbs2.hbs" @js="the-trigger-4-js.js" as |partialName|>
  {{partial partialName}}
</CodeExample>

<p>
  You can pass both <code>placeholderComponent</code> and <code>placeholder</code>. Inside
  your component the placeholder text will be available.
</p>

<h3>Clear button</h3>

<p>
  Sometimes you want to allow the users to clear the selection they just made. Regular selects
  don't allow that, but here is very simple, just pass <code>allowClear=true</code>.
  <strong>Please note that this option has no effect in  </strong><code>\{{power-select-multiple}}</code>
</p>

<CodeExample @hbs="the-trigger-5.hbs" @js="the-trigger-5-js.js" as |partialName|>
  {{partial partialName}}
</CodeExample>

<p>
  When the user clicks in the trigger the dropdown with the options appears. It's the most complex
  part of the component and the subject of the next chapter.
</p>

<div class="doc-page-nav">
  <a href={{href-to "public-pages.docs.multiple-selection"}} class="doc-page-nav-link-prev">&lt; Multiple selection</a>
  <a href={{href-to "public-pages.docs.the-list"}} class="doc-page-nav-link-next">The list &gt;</a>
</div>
