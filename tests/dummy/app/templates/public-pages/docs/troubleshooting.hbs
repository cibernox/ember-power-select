<h1 class="doc-page-title">Troubleshooting</h1>

<h3>The options are not visible in modals</h3>

<p>
  The list of options in ember-power-select has by default <code>z-index: 1000</code>. This apparently
  magical number is the same that some popular css frameworks like bootstrap use by default for
  dropdowns.
  Modals usually have higher z-indexes (bootstrap itself uses 1050) because if a modal opens
  unexpectedly while ember-power-select is open, you don't want the list of options to be placed on top.
</p>

<p>
  However if you want to render a select inside a model, that is a situation you can predict and
  design for. There is two possible solutions:
</p>

<ol>
  <li>
    Add a specific class to the select (p.e. <code>dropdownClass="in-modal-dropdown"</code>) will make the dropdown
    to have the class <code>"in-modal-dropdown"</code>. You can increase the z-index of this kind
    of selects.
  </li>
  <br>
  <li>
    Pass <code>renderInPlace=true</code>. This will make the list of options be placed next to the trigger
    instead of being attached to the body, and therefore it won't be afected by this z-index issue. Keep
    in mind that when rendered in place the list of options will loose its ability to intelligently
    position itself above the component if the space below is too small to fit it.
  </li>
</ol>

<h3>Nothing is rendered when I click the select</h3>

<p>
  This addon uses the <code>contentFor</code> hook to add an empty div in the <code>\{{content-for "body-footer"}}</code>
  placeholder defined in the <code>index.html</code> of most ember-cli applications.
</p>

<p>
  If your application is deviating from the standard approach (by example if you're attaching your
  app to a specific node) this approach might not work for your and you'll need to add a
  <code>&lt;div id="ember-basic-dropdown-wormhole"&gt;&lt;/div&gt;</code> manually in your
  <code>application.hbs</code>.
</p>

<h3>I keep getting <code>\{{power-select}} requires an `onchange` function</code></h3>

<p>
  Check if you're using Ember 1.13.9+.
</p>

<h3>In acceptance tests the <code>fillIn</code> helper doesn't work</h3>

<p>
  This is due to a bug in the <code>fillIn</code> helper that fixed in Ember 2.0. Until you update your app
  to 2.0+ you must trigger an <code>input</code> event after the filling the search box.

  <pre>
    fillIn('.ember-power-select-search-input', 'foo');
    triggerEvent('.ember-power-select-search-input', 'input');

    andThen(() => {
      // Do your assertions
    });
  </pre>
</p>


<div class="doc-page-nav">
  {{#link-to 'public-pages.docs.test-helpers' class="doc-page-nav-link-prev"}}&lt; Test helpers{{/link-to}}
  {{#link-to 'public-pages.docs.architecture' class="doc-page-nav-link-next"}}Architecture &gt;{{/link-to}}
</div>
