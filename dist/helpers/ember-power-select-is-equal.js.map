{"version":3,"file":"ember-power-select-is-equal.js","sources":["../../src/helpers/ember-power-select-is-equal.ts"],"sourcesContent":["import { helper } from '@ember/component/helper';\nimport { isArray as isEmberArray } from '@ember/array';\nimport { isEqual } from '@ember/utils';\n\nexport function emberPowerSelectIsEqual(\n  [option, selected]: [any, any] /* , hash*/,\n): boolean {\n  if (selected === undefined || selected === null) {\n    return false;\n  }\n  if (isEmberArray(selected)) {\n    for (let i = 0; i < selected.length; i++) {\n      // @ts-expect-error Element implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ArrayLike<unknown> | EmberArray<unknown>'.\n      if (isEqual(selected[i], option)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return isEqual(option, selected);\n  }\n}\n\nexport default helper(emberPowerSelectIsEqual);\n"],"names":["emberPowerSelectIsEqual","option","selected","undefined","isEmberArray","i","length","isEqual","helper"],"mappings":";;;;AAIO,SAASA,uBAAuBA,CACrC,CAACC,MAAM,EAAEC,QAAQ,CAAa,EACrB;AACT,EAAA,IAAIA,QAAQ,KAAKC,SAAS,IAAID,QAAQ,KAAK,IAAI,EAAE;AAC/C,IAAA,OAAO,KAAK;AACd,EAAA;AACA,EAAA,IAAIE,OAAY,CAACF,QAAQ,CAAC,EAAE;AAC1B,IAAA,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,QAAQ,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;AACxC;MACA,IAAIE,OAAO,CAACL,QAAQ,CAACG,CAAC,CAAC,EAAEJ,MAAM,CAAC,EAAE;AAChC,QAAA,OAAO,IAAI;AACb,MAAA;AACF,IAAA;AACA,IAAA,OAAO,KAAK;AACd,EAAA,CAAC,MAAM;AACL,IAAA,OAAOM,OAAO,CAACN,MAAM,EAAEC,QAAQ,CAAC;AAClC,EAAA;AACF;AAEA,gCAAeM,MAAM,CAACR,uBAAuB,CAAC;;;;"}