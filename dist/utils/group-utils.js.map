{"version":3,"file":"group-utils.js","sources":["../../src/utils/group-utils.ts"],"sourcesContent":["import { isEqual } from '@ember/utils';\n\nexport type MatcherFn = (option: any, text: string) => number;\nexport function isGroup(entry: any): boolean {\n  return !!entry && !!entry.groupName && !!entry.options;\n}\n\nexport function countOptions(collection: any): number {\n  let counter = 0;\n  (function walk(collection): void {\n    if (!collection) {\n      return;\n    }\n    for (let i = 0; i < collection.length; i++) {\n      const entry = collection.objectAt\n        ? collection.objectAt(i)\n        : collection[i];\n      if (isGroup(entry)) {\n        walk(entry.options);\n      } else {\n        counter++;\n      }\n    }\n  })(collection);\n  return counter;\n}\n\nexport function indexOfOption(collection: any, option: any): number {\n  let index = 0;\n  return (function walk(collection): number {\n    if (!collection) {\n      return -1;\n    }\n    for (let i = 0; i < collection.length; i++) {\n      const entry = collection.objectAt\n        ? collection.objectAt(i)\n        : collection[i];\n      if (isGroup(entry)) {\n        const result = walk(entry.options);\n        if (result > -1) {\n          return result;\n        }\n      } else if (isEqual(entry, option)) {\n        return index;\n      } else {\n        index++;\n      }\n    }\n    return -1;\n  })(collection);\n}\n\nexport function pathForOption(collection: any, option: any): string {\n  return (function walk(collection): string {\n    if (!collection) {\n      return '';\n    }\n    for (let i = 0; i < collection.length; i++) {\n      const entry = collection.objectAt\n        ? collection.objectAt(i)\n        : collection[i];\n      if (isGroup(entry)) {\n        const result = walk(entry.options);\n        if (result.length > 0) {\n          return i + '.' + result;\n        }\n      } else if (isEqual(entry, option)) {\n        return i + '';\n      }\n    }\n    return '';\n  })(collection);\n}\n\nexport function optionAtIndex(\n  originalCollection: any,\n  index: number,\n): { disabled: boolean; option: any } {\n  let counter = 0;\n  return (\n    (function walk(\n      collection,\n      ancestorIsDisabled,\n    ): { disabled: boolean; option: any } | void {\n      if (!collection || index < 0) {\n        return { disabled: false, option: undefined };\n      }\n      let localCounter = 0;\n      const length = collection.length;\n      while (counter <= index && localCounter < length) {\n        const entry = collection.objectAt\n          ? collection.objectAt(localCounter)\n          : collection[localCounter];\n        if (isGroup(entry)) {\n          const found = walk(\n            entry.options,\n            ancestorIsDisabled || !!entry.disabled,\n          );\n          if (found) {\n            return found;\n          }\n        } else if (counter === index) {\n          return {\n            disabled: ancestorIsDisabled || !!entry.disabled,\n            option: entry,\n          };\n        } else {\n          counter++;\n        }\n        localCounter++;\n      }\n    })(originalCollection, false) || { disabled: false, option: undefined }\n  );\n}\n\nexport interface Group {\n  groupName: string;\n  options: any[];\n  disabled?: boolean;\n  [key: string]: unknown;\n}\nfunction copyGroup(group: Group, suboptions: any[]): Group {\n  const groupCopy: Group = { ...group, options: suboptions };\n  if (Object.prototype.hasOwnProperty.call(group, 'disabled')) {\n    groupCopy.disabled = group.disabled;\n  }\n  return groupCopy;\n}\n\nexport function findOptionWithOffset(\n  options: any,\n  text: string,\n  matcher: MatcherFn,\n  offset: number,\n  skipDisabled = false,\n): any {\n  let counter = 0;\n  let foundBeforeOffset;\n  let foundAfterOffset = false;\n  const canStop = () => !!foundAfterOffset;\n\n  (function walk(options: any, ancestorIsDisabled: boolean): any {\n    const length = options.length;\n\n    for (let i = 0; i < length; i++) {\n      const entry = options.objectAt ? options.objectAt(i) : options[i];\n      const entryIsDisabled = !!entry.disabled;\n      if (!skipDisabled || !entryIsDisabled) {\n        if (isGroup(entry)) {\n          walk(entry.options, ancestorIsDisabled || entryIsDisabled);\n          if (canStop()) {\n            return;\n          }\n        } else if (matcher(entry, text) >= 0) {\n          if (counter < offset) {\n            if (!foundBeforeOffset) {\n              foundBeforeOffset = entry;\n            }\n          } else {\n            foundAfterOffset = entry;\n          }\n          counter++;\n        } else {\n          counter++;\n        }\n\n        if (canStop()) {\n          return;\n        }\n      }\n    }\n  })(options, false);\n\n  return foundAfterOffset ? foundAfterOffset : foundBeforeOffset;\n}\n\nexport function filterOptions(\n  options: any,\n  text: string,\n  matcher: MatcherFn,\n  skipDisabled = false,\n): any[] {\n  const opts = [];\n  const length = options.length;\n  for (let i = 0; i < length; i++) {\n    const entry = options.objectAt ? options.objectAt(i) : options[i];\n    if (!skipDisabled || !entry.disabled) {\n      if (isGroup(entry)) {\n        const suboptions = filterOptions(\n          entry.options,\n          text,\n          matcher,\n          skipDisabled,\n        );\n        if (suboptions.length > 0) {\n          opts.push(copyGroup(entry, suboptions));\n        }\n      } else if (matcher(entry, text) >= 0) {\n        opts.push(entry);\n      }\n    }\n  }\n  return opts;\n}\n\nexport function defaultHighlighted<T>({\n  results,\n  highlighted,\n  selected,\n}: {\n  results: T[];\n  highlighted: T | undefined;\n  selected: T | undefined;\n}): T {\n  const option = highlighted || selected;\n  if (option === undefined || indexOfOption(results, option) === -1) {\n    return advanceSelectableOption(results, option, 1);\n  }\n  return option;\n}\n\nexport function advanceSelectableOption(\n  options: any,\n  currentOption: any,\n  step: 1 | -1,\n) {\n  const resultsLength = countOptions(options);\n  let startIndex = Math.min(\n    Math.max(indexOfOption(options, currentOption) + step, 0),\n    resultsLength - 1,\n  );\n  let { disabled, option } = optionAtIndex(options, startIndex);\n  while (option && disabled) {\n    const next = optionAtIndex(options, (startIndex += step));\n    disabled = next.disabled;\n    option = next.option;\n  }\n  return option;\n}\n\nconst DIACRITICS: Record<string, string> = {\n  'Ⓐ': 'A',\n  Ａ: 'A',\n  À: 'A',\n  Á: 'A',\n  Â: 'A',\n  Ầ: 'A',\n  Ấ: 'A',\n  Ẫ: 'A',\n  Ẩ: 'A',\n  Ã: 'A',\n  Ā: 'A',\n  Ă: 'A',\n  Ằ: 'A',\n  Ắ: 'A',\n  Ẵ: 'A',\n  Ẳ: 'A',\n  Ȧ: 'A',\n  Ǡ: 'A',\n  Ä: 'A',\n  Ǟ: 'A',\n  Ả: 'A',\n  Å: 'A',\n  Ǻ: 'A',\n  Ǎ: 'A',\n  Ȁ: 'A',\n  Ȃ: 'A',\n  Ạ: 'A',\n  Ậ: 'A',\n  Ặ: 'A',\n  Ḁ: 'A',\n  Ą: 'A',\n  Ⱥ: 'A',\n  Ɐ: 'A',\n  Ꜳ: 'AA',\n  Æ: 'AE',\n  Ǽ: 'AE',\n  Ǣ: 'AE',\n  Ꜵ: 'AO',\n  Ꜷ: 'AU',\n  Ꜹ: 'AV',\n  Ꜻ: 'AV',\n  Ꜽ: 'AY',\n  'Ⓑ': 'B',\n  Ｂ: 'B',\n  Ḃ: 'B',\n  Ḅ: 'B',\n  Ḇ: 'B',\n  Ƀ: 'B',\n  Ƃ: 'B',\n  Ɓ: 'B',\n  'Ⓒ': 'C',\n  Ｃ: 'C',\n  Ć: 'C',\n  Ĉ: 'C',\n  Ċ: 'C',\n  Č: 'C',\n  Ç: 'C',\n  Ḉ: 'C',\n  Ƈ: 'C',\n  Ȼ: 'C',\n  Ꜿ: 'C',\n  'Ⓓ': 'D',\n  Ｄ: 'D',\n  Ḋ: 'D',\n  Ď: 'D',\n  Ḍ: 'D',\n  Ḑ: 'D',\n  Ḓ: 'D',\n  Ḏ: 'D',\n  Đ: 'D',\n  Ƌ: 'D',\n  Ɗ: 'D',\n  Ɖ: 'D',\n  Ꝺ: 'D',\n  Ǳ: 'DZ',\n  Ǆ: 'DZ',\n  ǲ: 'Dz',\n  ǅ: 'Dz',\n  'Ⓔ': 'E',\n  Ｅ: 'E',\n  È: 'E',\n  É: 'E',\n  Ê: 'E',\n  Ề: 'E',\n  Ế: 'E',\n  Ễ: 'E',\n  Ể: 'E',\n  Ẽ: 'E',\n  Ē: 'E',\n  Ḕ: 'E',\n  Ḗ: 'E',\n  Ĕ: 'E',\n  Ė: 'E',\n  Ë: 'E',\n  Ẻ: 'E',\n  Ě: 'E',\n  Ȅ: 'E',\n  Ȇ: 'E',\n  Ẹ: 'E',\n  Ệ: 'E',\n  Ȩ: 'E',\n  Ḝ: 'E',\n  Ę: 'E',\n  Ḙ: 'E',\n  Ḛ: 'E',\n  Ɛ: 'E',\n  Ǝ: 'E',\n  'Ⓕ': 'F',\n  Ｆ: 'F',\n  Ḟ: 'F',\n  Ƒ: 'F',\n  Ꝼ: 'F',\n  'Ⓖ': 'G',\n  Ｇ: 'G',\n  Ǵ: 'G',\n  Ĝ: 'G',\n  Ḡ: 'G',\n  Ğ: 'G',\n  Ġ: 'G',\n  Ǧ: 'G',\n  Ģ: 'G',\n  Ǥ: 'G',\n  Ɠ: 'G',\n  Ꞡ: 'G',\n  Ᵹ: 'G',\n  Ꝿ: 'G',\n  'Ⓗ': 'H',\n  Ｈ: 'H',\n  Ĥ: 'H',\n  Ḣ: 'H',\n  Ḧ: 'H',\n  Ȟ: 'H',\n  Ḥ: 'H',\n  Ḩ: 'H',\n  Ḫ: 'H',\n  Ħ: 'H',\n  Ⱨ: 'H',\n  Ⱶ: 'H',\n  Ɥ: 'H',\n  'Ⓘ': 'I',\n  Ｉ: 'I',\n  Ì: 'I',\n  Í: 'I',\n  Î: 'I',\n  Ĩ: 'I',\n  Ī: 'I',\n  Ĭ: 'I',\n  İ: 'I',\n  Ï: 'I',\n  Ḯ: 'I',\n  Ỉ: 'I',\n  Ǐ: 'I',\n  Ȉ: 'I',\n  Ȋ: 'I',\n  Ị: 'I',\n  Į: 'I',\n  Ḭ: 'I',\n  Ɨ: 'I',\n  'Ⓙ': 'J',\n  Ｊ: 'J',\n  Ĵ: 'J',\n  Ɉ: 'J',\n  'Ⓚ': 'K',\n  Ｋ: 'K',\n  Ḱ: 'K',\n  Ǩ: 'K',\n  Ḳ: 'K',\n  Ķ: 'K',\n  Ḵ: 'K',\n  Ƙ: 'K',\n  Ⱪ: 'K',\n  Ꝁ: 'K',\n  Ꝃ: 'K',\n  Ꝅ: 'K',\n  Ꞣ: 'K',\n  'Ⓛ': 'L',\n  Ｌ: 'L',\n  Ŀ: 'L',\n  Ĺ: 'L',\n  Ľ: 'L',\n  Ḷ: 'L',\n  Ḹ: 'L',\n  Ļ: 'L',\n  Ḽ: 'L',\n  Ḻ: 'L',\n  Ł: 'L',\n  Ƚ: 'L',\n  Ɫ: 'L',\n  Ⱡ: 'L',\n  Ꝉ: 'L',\n  Ꝇ: 'L',\n  Ꞁ: 'L',\n  Ǉ: 'LJ',\n  ǈ: 'Lj',\n  'Ⓜ': 'M',\n  Ｍ: 'M',\n  Ḿ: 'M',\n  Ṁ: 'M',\n  Ṃ: 'M',\n  Ɱ: 'M',\n  Ɯ: 'M',\n  'Ⓝ': 'N',\n  Ｎ: 'N',\n  Ǹ: 'N',\n  Ń: 'N',\n  Ñ: 'N',\n  Ṅ: 'N',\n  Ň: 'N',\n  Ṇ: 'N',\n  Ņ: 'N',\n  Ṋ: 'N',\n  Ṉ: 'N',\n  Ƞ: 'N',\n  Ɲ: 'N',\n  Ꞑ: 'N',\n  Ꞥ: 'N',\n  Ǌ: 'NJ',\n  ǋ: 'Nj',\n  'Ⓞ': 'O',\n  Ｏ: 'O',\n  Ò: 'O',\n  Ó: 'O',\n  Ô: 'O',\n  Ồ: 'O',\n  Ố: 'O',\n  Ỗ: 'O',\n  Ổ: 'O',\n  Õ: 'O',\n  Ṍ: 'O',\n  Ȭ: 'O',\n  Ṏ: 'O',\n  Ō: 'O',\n  Ṑ: 'O',\n  Ṓ: 'O',\n  Ŏ: 'O',\n  Ȯ: 'O',\n  Ȱ: 'O',\n  Ö: 'O',\n  Ȫ: 'O',\n  Ỏ: 'O',\n  Ő: 'O',\n  Ǒ: 'O',\n  Ȍ: 'O',\n  Ȏ: 'O',\n  Ơ: 'O',\n  Ờ: 'O',\n  Ớ: 'O',\n  Ỡ: 'O',\n  Ở: 'O',\n  Ợ: 'O',\n  Ọ: 'O',\n  Ộ: 'O',\n  Ǫ: 'O',\n  Ǭ: 'O',\n  Ø: 'O',\n  Ǿ: 'O',\n  Ɔ: 'O',\n  Ɵ: 'O',\n  Ꝋ: 'O',\n  Ꝍ: 'O',\n  Ƣ: 'OI',\n  Ꝏ: 'OO',\n  Ȣ: 'OU',\n  'Ⓟ': 'P',\n  Ｐ: 'P',\n  Ṕ: 'P',\n  Ṗ: 'P',\n  Ƥ: 'P',\n  Ᵽ: 'P',\n  Ꝑ: 'P',\n  Ꝓ: 'P',\n  Ꝕ: 'P',\n  'Ⓠ': 'Q',\n  Ｑ: 'Q',\n  Ꝗ: 'Q',\n  Ꝙ: 'Q',\n  Ɋ: 'Q',\n  'Ⓡ': 'R',\n  Ｒ: 'R',\n  Ŕ: 'R',\n  Ṙ: 'R',\n  Ř: 'R',\n  Ȑ: 'R',\n  Ȓ: 'R',\n  Ṛ: 'R',\n  Ṝ: 'R',\n  Ŗ: 'R',\n  Ṟ: 'R',\n  Ɍ: 'R',\n  Ɽ: 'R',\n  Ꝛ: 'R',\n  Ꞧ: 'R',\n  Ꞃ: 'R',\n  'Ⓢ': 'S',\n  Ｓ: 'S',\n  ẞ: 'S',\n  Ś: 'S',\n  Ṥ: 'S',\n  Ŝ: 'S',\n  Ṡ: 'S',\n  Š: 'S',\n  Ṧ: 'S',\n  Ṣ: 'S',\n  Ṩ: 'S',\n  Ș: 'S',\n  Ş: 'S',\n  Ȿ: 'S',\n  Ꞩ: 'S',\n  Ꞅ: 'S',\n  'Ⓣ': 'T',\n  Ｔ: 'T',\n  Ṫ: 'T',\n  Ť: 'T',\n  Ṭ: 'T',\n  Ț: 'T',\n  Ţ: 'T',\n  Ṱ: 'T',\n  Ṯ: 'T',\n  Ŧ: 'T',\n  Ƭ: 'T',\n  Ʈ: 'T',\n  Ⱦ: 'T',\n  Ꞇ: 'T',\n  Ꜩ: 'TZ',\n  'Ⓤ': 'U',\n  Ｕ: 'U',\n  Ù: 'U',\n  Ú: 'U',\n  Û: 'U',\n  Ũ: 'U',\n  Ṹ: 'U',\n  Ū: 'U',\n  Ṻ: 'U',\n  Ŭ: 'U',\n  Ü: 'U',\n  Ǜ: 'U',\n  Ǘ: 'U',\n  Ǖ: 'U',\n  Ǚ: 'U',\n  Ủ: 'U',\n  Ů: 'U',\n  Ű: 'U',\n  Ǔ: 'U',\n  Ȕ: 'U',\n  Ȗ: 'U',\n  Ư: 'U',\n  Ừ: 'U',\n  Ứ: 'U',\n  Ữ: 'U',\n  Ử: 'U',\n  Ự: 'U',\n  Ụ: 'U',\n  Ṳ: 'U',\n  Ų: 'U',\n  Ṷ: 'U',\n  Ṵ: 'U',\n  Ʉ: 'U',\n  'Ⓥ': 'V',\n  Ｖ: 'V',\n  Ṽ: 'V',\n  Ṿ: 'V',\n  Ʋ: 'V',\n  Ꝟ: 'V',\n  Ʌ: 'V',\n  Ꝡ: 'VY',\n  'Ⓦ': 'W',\n  Ｗ: 'W',\n  Ẁ: 'W',\n  Ẃ: 'W',\n  Ŵ: 'W',\n  Ẇ: 'W',\n  Ẅ: 'W',\n  Ẉ: 'W',\n  Ⱳ: 'W',\n  'Ⓧ': 'X',\n  Ｘ: 'X',\n  Ẋ: 'X',\n  Ẍ: 'X',\n  'Ⓨ': 'Y',\n  Ｙ: 'Y',\n  Ỳ: 'Y',\n  Ý: 'Y',\n  Ŷ: 'Y',\n  Ỹ: 'Y',\n  Ȳ: 'Y',\n  Ẏ: 'Y',\n  Ÿ: 'Y',\n  Ỷ: 'Y',\n  Ỵ: 'Y',\n  Ƴ: 'Y',\n  Ɏ: 'Y',\n  Ỿ: 'Y',\n  'Ⓩ': 'Z',\n  Ｚ: 'Z',\n  Ź: 'Z',\n  Ẑ: 'Z',\n  Ż: 'Z',\n  Ž: 'Z',\n  Ẓ: 'Z',\n  Ẕ: 'Z',\n  Ƶ: 'Z',\n  Ȥ: 'Z',\n  Ɀ: 'Z',\n  Ⱬ: 'Z',\n  Ꝣ: 'Z',\n  'ⓐ': 'a',\n  ａ: 'a',\n  ẚ: 'a',\n  à: 'a',\n  á: 'a',\n  â: 'a',\n  ầ: 'a',\n  ấ: 'a',\n  ẫ: 'a',\n  ẩ: 'a',\n  ã: 'a',\n  ā: 'a',\n  ă: 'a',\n  ằ: 'a',\n  ắ: 'a',\n  ẵ: 'a',\n  ẳ: 'a',\n  ȧ: 'a',\n  ǡ: 'a',\n  ä: 'a',\n  ǟ: 'a',\n  ả: 'a',\n  å: 'a',\n  ǻ: 'a',\n  ǎ: 'a',\n  ȁ: 'a',\n  ȃ: 'a',\n  ạ: 'a',\n  ậ: 'a',\n  ặ: 'a',\n  ḁ: 'a',\n  ą: 'a',\n  ⱥ: 'a',\n  ɐ: 'a',\n  ꜳ: 'aa',\n  æ: 'ae',\n  ǽ: 'ae',\n  ǣ: 'ae',\n  ꜵ: 'ao',\n  ꜷ: 'au',\n  ꜹ: 'av',\n  ꜻ: 'av',\n  ꜽ: 'ay',\n  'ⓑ': 'b',\n  ｂ: 'b',\n  ḃ: 'b',\n  ḅ: 'b',\n  ḇ: 'b',\n  ƀ: 'b',\n  ƃ: 'b',\n  ɓ: 'b',\n  'ⓒ': 'c',\n  ｃ: 'c',\n  ć: 'c',\n  ĉ: 'c',\n  ċ: 'c',\n  č: 'c',\n  ç: 'c',\n  ḉ: 'c',\n  ƈ: 'c',\n  ȼ: 'c',\n  ꜿ: 'c',\n  ↄ: 'c',\n  'ⓓ': 'd',\n  ｄ: 'd',\n  ḋ: 'd',\n  ď: 'd',\n  ḍ: 'd',\n  ḑ: 'd',\n  ḓ: 'd',\n  ḏ: 'd',\n  đ: 'd',\n  ƌ: 'd',\n  ɖ: 'd',\n  ɗ: 'd',\n  ꝺ: 'd',\n  ǳ: 'dz',\n  ǆ: 'dz',\n  'ⓔ': 'e',\n  ｅ: 'e',\n  è: 'e',\n  é: 'e',\n  ê: 'e',\n  ề: 'e',\n  ế: 'e',\n  ễ: 'e',\n  ể: 'e',\n  ẽ: 'e',\n  ē: 'e',\n  ḕ: 'e',\n  ḗ: 'e',\n  ĕ: 'e',\n  ė: 'e',\n  ë: 'e',\n  ẻ: 'e',\n  ě: 'e',\n  ȅ: 'e',\n  ȇ: 'e',\n  ẹ: 'e',\n  ệ: 'e',\n  ȩ: 'e',\n  ḝ: 'e',\n  ę: 'e',\n  ḙ: 'e',\n  ḛ: 'e',\n  ɇ: 'e',\n  ɛ: 'e',\n  ǝ: 'e',\n  'ⓕ': 'f',\n  ｆ: 'f',\n  ḟ: 'f',\n  ƒ: 'f',\n  ꝼ: 'f',\n  'ⓖ': 'g',\n  ｇ: 'g',\n  ǵ: 'g',\n  ĝ: 'g',\n  ḡ: 'g',\n  ğ: 'g',\n  ġ: 'g',\n  ǧ: 'g',\n  ģ: 'g',\n  ǥ: 'g',\n  ɠ: 'g',\n  ꞡ: 'g',\n  ᵹ: 'g',\n  ꝿ: 'g',\n  'ⓗ': 'h',\n  ｈ: 'h',\n  ĥ: 'h',\n  ḣ: 'h',\n  ḧ: 'h',\n  ȟ: 'h',\n  ḥ: 'h',\n  ḩ: 'h',\n  ḫ: 'h',\n  ẖ: 'h',\n  ħ: 'h',\n  ⱨ: 'h',\n  ⱶ: 'h',\n  ɥ: 'h',\n  ƕ: 'hv',\n  'ⓘ': 'i',\n  ｉ: 'i',\n  ì: 'i',\n  í: 'i',\n  î: 'i',\n  ĩ: 'i',\n  ī: 'i',\n  ĭ: 'i',\n  ï: 'i',\n  ḯ: 'i',\n  ỉ: 'i',\n  ǐ: 'i',\n  ȉ: 'i',\n  ȋ: 'i',\n  ị: 'i',\n  į: 'i',\n  ḭ: 'i',\n  ɨ: 'i',\n  ı: 'i',\n  'ⓙ': 'j',\n  ｊ: 'j',\n  ĵ: 'j',\n  ǰ: 'j',\n  ɉ: 'j',\n  'ⓚ': 'k',\n  ｋ: 'k',\n  ḱ: 'k',\n  ǩ: 'k',\n  ḳ: 'k',\n  ķ: 'k',\n  ḵ: 'k',\n  ƙ: 'k',\n  ⱪ: 'k',\n  ꝁ: 'k',\n  ꝃ: 'k',\n  ꝅ: 'k',\n  ꞣ: 'k',\n  'ⓛ': 'l',\n  ｌ: 'l',\n  ŀ: 'l',\n  ĺ: 'l',\n  ľ: 'l',\n  ḷ: 'l',\n  ḹ: 'l',\n  ļ: 'l',\n  ḽ: 'l',\n  ḻ: 'l',\n  ſ: 'l',\n  ł: 'l',\n  ƚ: 'l',\n  ɫ: 'l',\n  ⱡ: 'l',\n  ꝉ: 'l',\n  ꞁ: 'l',\n  ꝇ: 'l',\n  ǉ: 'lj',\n  'ⓜ': 'm',\n  ｍ: 'm',\n  ḿ: 'm',\n  ṁ: 'm',\n  ṃ: 'm',\n  ɱ: 'm',\n  ɯ: 'm',\n  'ⓝ': 'n',\n  ｎ: 'n',\n  ǹ: 'n',\n  ń: 'n',\n  ñ: 'n',\n  ṅ: 'n',\n  ň: 'n',\n  ṇ: 'n',\n  ņ: 'n',\n  ṋ: 'n',\n  ṉ: 'n',\n  ƞ: 'n',\n  ɲ: 'n',\n  ŉ: 'n',\n  ꞑ: 'n',\n  ꞥ: 'n',\n  ǌ: 'nj',\n  'ⓞ': 'o',\n  ｏ: 'o',\n  ò: 'o',\n  ó: 'o',\n  ô: 'o',\n  ồ: 'o',\n  ố: 'o',\n  ỗ: 'o',\n  ổ: 'o',\n  õ: 'o',\n  ṍ: 'o',\n  ȭ: 'o',\n  ṏ: 'o',\n  ō: 'o',\n  ṑ: 'o',\n  ṓ: 'o',\n  ŏ: 'o',\n  ȯ: 'o',\n  ȱ: 'o',\n  ö: 'o',\n  ȫ: 'o',\n  ỏ: 'o',\n  ő: 'o',\n  ǒ: 'o',\n  ȍ: 'o',\n  ȏ: 'o',\n  ơ: 'o',\n  ờ: 'o',\n  ớ: 'o',\n  ỡ: 'o',\n  ở: 'o',\n  ợ: 'o',\n  ọ: 'o',\n  ộ: 'o',\n  ǫ: 'o',\n  ǭ: 'o',\n  ø: 'o',\n  ǿ: 'o',\n  ɔ: 'o',\n  ꝋ: 'o',\n  ꝍ: 'o',\n  ɵ: 'o',\n  ƣ: 'oi',\n  ȣ: 'ou',\n  ꝏ: 'oo',\n  'ⓟ': 'p',\n  ｐ: 'p',\n  ṕ: 'p',\n  ṗ: 'p',\n  ƥ: 'p',\n  ᵽ: 'p',\n  ꝑ: 'p',\n  ꝓ: 'p',\n  ꝕ: 'p',\n  'ⓠ': 'q',\n  ｑ: 'q',\n  ɋ: 'q',\n  ꝗ: 'q',\n  ꝙ: 'q',\n  'ⓡ': 'r',\n  ｒ: 'r',\n  ŕ: 'r',\n  ṙ: 'r',\n  ř: 'r',\n  ȑ: 'r',\n  ȓ: 'r',\n  ṛ: 'r',\n  ṝ: 'r',\n  ŗ: 'r',\n  ṟ: 'r',\n  ɍ: 'r',\n  ɽ: 'r',\n  ꝛ: 'r',\n  ꞧ: 'r',\n  ꞃ: 'r',\n  'ⓢ': 's',\n  ｓ: 's',\n  ß: 's',\n  ś: 's',\n  ṥ: 's',\n  ŝ: 's',\n  ṡ: 's',\n  š: 's',\n  ṧ: 's',\n  ṣ: 's',\n  ṩ: 's',\n  ș: 's',\n  ş: 's',\n  ȿ: 's',\n  ꞩ: 's',\n  ꞅ: 's',\n  ẛ: 's',\n  'ⓣ': 't',\n  ｔ: 't',\n  ṫ: 't',\n  ẗ: 't',\n  ť: 't',\n  ṭ: 't',\n  ț: 't',\n  ţ: 't',\n  ṱ: 't',\n  ṯ: 't',\n  ŧ: 't',\n  ƭ: 't',\n  ʈ: 't',\n  ⱦ: 't',\n  ꞇ: 't',\n  ꜩ: 'tz',\n  'ⓤ': 'u',\n  ｕ: 'u',\n  ù: 'u',\n  ú: 'u',\n  û: 'u',\n  ũ: 'u',\n  ṹ: 'u',\n  ū: 'u',\n  ṻ: 'u',\n  ŭ: 'u',\n  ü: 'u',\n  ǜ: 'u',\n  ǘ: 'u',\n  ǖ: 'u',\n  ǚ: 'u',\n  ủ: 'u',\n  ů: 'u',\n  ű: 'u',\n  ǔ: 'u',\n  ȕ: 'u',\n  ȗ: 'u',\n  ư: 'u',\n  ừ: 'u',\n  ứ: 'u',\n  ữ: 'u',\n  ử: 'u',\n  ự: 'u',\n  ụ: 'u',\n  ṳ: 'u',\n  ų: 'u',\n  ṷ: 'u',\n  ṵ: 'u',\n  ʉ: 'u',\n  'ⓥ': 'v',\n  ｖ: 'v',\n  ṽ: 'v',\n  ṿ: 'v',\n  ʋ: 'v',\n  ꝟ: 'v',\n  ʌ: 'v',\n  ꝡ: 'vy',\n  'ⓦ': 'w',\n  ｗ: 'w',\n  ẁ: 'w',\n  ẃ: 'w',\n  ŵ: 'w',\n  ẇ: 'w',\n  ẅ: 'w',\n  ẘ: 'w',\n  ẉ: 'w',\n  ⱳ: 'w',\n  'ⓧ': 'x',\n  ｘ: 'x',\n  ẋ: 'x',\n  ẍ: 'x',\n  'ⓨ': 'y',\n  ｙ: 'y',\n  ỳ: 'y',\n  ý: 'y',\n  ŷ: 'y',\n  ỹ: 'y',\n  ȳ: 'y',\n  ẏ: 'y',\n  ÿ: 'y',\n  ỷ: 'y',\n  ẙ: 'y',\n  ỵ: 'y',\n  ƴ: 'y',\n  ɏ: 'y',\n  ỿ: 'y',\n  'ⓩ': 'z',\n  ｚ: 'z',\n  ź: 'z',\n  ẑ: 'z',\n  ż: 'z',\n  ž: 'z',\n  ẓ: 'z',\n  ẕ: 'z',\n  ƶ: 'z',\n  ȥ: 'z',\n  ɀ: 'z',\n  ⱬ: 'z',\n  ꝣ: 'z',\n  Ά: 'Α',\n  Έ: 'Ε',\n  Ή: 'Η',\n  Ί: 'Ι',\n  Ϊ: 'Ι',\n  Ό: 'Ο',\n  Ύ: 'Υ',\n  Ϋ: 'Υ',\n  Ώ: 'Ω',\n  ά: 'α',\n  έ: 'ε',\n  ή: 'η',\n  ί: 'ι',\n  ϊ: 'ι',\n  ΐ: 'ι',\n  ό: 'ο',\n  ύ: 'υ',\n  ϋ: 'υ',\n  ΰ: 'υ',\n  ω: 'ω',\n  ς: 'σ',\n};\n\n// Copied from Select2\nexport function stripDiacritics(text: string | number) {\n  // Used 'uni range + named function' from http://jsperf.com/diacritics/18\n  function match(a: string) {\n    return DIACRITICS[a] || a;\n  }\n\n  return `${text}`.replace(/[^\\u0000-\\u007E]/g, match); // eslint-disable-line\n}\n\nexport function defaultMatcher(value: string, text: string) {\n  return stripDiacritics(value)\n    .toUpperCase()\n    .indexOf(stripDiacritics(text).toUpperCase());\n}\n\nexport function defaultTypeAheadMatcher(value: string, text: string) {\n  return stripDiacritics(value)\n    .toUpperCase()\n    .startsWith(stripDiacritics(text).toUpperCase())\n    ? 1\n    : -1;\n}\n"],"names":["isGroup","entry","groupName","options","countOptions","collection","counter","walk","i","length","objectAt","indexOfOption","option","index","result","isEqual","pathForOption","optionAtIndex","originalCollection","ancestorIsDisabled","disabled","undefined","localCounter","found","copyGroup","group","suboptions","groupCopy","Object","prototype","hasOwnProperty","call","findOptionWithOffset","text","matcher","offset","skipDisabled","foundBeforeOffset","foundAfterOffset","canStop","entryIsDisabled","filterOptions","opts","push","defaultHighlighted","results","highlighted","selected","advanceSelectableOption","currentOption","step","resultsLength","startIndex","Math","min","max","next","DIACRITICS","Ａ","À","Á","Â","Ầ","Ấ","Ẫ","Ẩ","Ã","Ā","Ă","Ằ","Ắ","Ẵ","Ẳ","Ȧ","Ǡ","Ä","Ǟ","Ả","Å","Ǻ","Ǎ","Ȁ","Ȃ","Ạ","Ậ","Ặ","Ḁ","Ą","Ⱥ","Ɐ","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ｂ","Ḃ","Ḅ","Ḇ","Ƀ","Ƃ","Ɓ","Ｃ","Ć","Ĉ","Ċ","Č","Ç","Ḉ","Ƈ","Ȼ","Ꜿ","Ｄ","Ḋ","Ď","Ḍ","Ḑ","Ḓ","Ḏ","Đ","Ƌ","Ɗ","Ɖ","Ꝺ","Ǳ","Ǆ","ǲ","ǅ","Ｅ","È","É","Ê","Ề","Ế","Ễ","Ể","Ẽ","Ē","Ḕ","Ḗ","Ĕ","Ė","Ë","Ẻ","Ě","Ȅ","Ȇ","Ẹ","Ệ","Ȩ","Ḝ","Ę","Ḙ","Ḛ","Ɛ","Ǝ","Ｆ","Ḟ","Ƒ","Ꝼ","Ｇ","Ǵ","Ĝ","Ḡ","Ğ","Ġ","Ǧ","Ģ","Ǥ","Ɠ","Ꞡ","Ᵹ","Ꝿ","Ｈ","Ĥ","Ḣ","Ḧ","Ȟ","Ḥ","Ḩ","Ḫ","Ħ","Ⱨ","Ⱶ","Ɥ","Ｉ","Ì","Í","Î","Ĩ","Ī","Ĭ","İ","Ï","Ḯ","Ỉ","Ǐ","Ȉ","Ȋ","Ị","Į","Ḭ","Ɨ","Ｊ","Ĵ","Ɉ","Ｋ","Ḱ","Ǩ","Ḳ","Ķ","Ḵ","Ƙ","Ⱪ","Ꝁ","Ꝃ","Ꝅ","Ꞣ","Ｌ","Ŀ","Ĺ","Ľ","Ḷ","Ḹ","Ļ","Ḽ","Ḻ","Ł","Ƚ","Ɫ","Ⱡ","Ꝉ","Ꝇ","Ꞁ","Ǉ","ǈ","Ｍ","Ḿ","Ṁ","Ṃ","Ɱ","Ɯ","Ｎ","Ǹ","Ń","Ñ","Ṅ","Ň","Ṇ","Ņ","Ṋ","Ṉ","Ƞ","Ɲ","Ꞑ","Ꞥ","Ǌ","ǋ","Ｏ","Ò","Ó","Ô","Ồ","Ố","Ỗ","Ổ","Õ","Ṍ","Ȭ","Ṏ","Ō","Ṑ","Ṓ","Ŏ","Ȯ","Ȱ","Ö","Ȫ","Ỏ","Ő","Ǒ","Ȍ","Ȏ","Ơ","Ờ","Ớ","Ỡ","Ở","Ợ","Ọ","Ộ","Ǫ","Ǭ","Ø","Ǿ","Ɔ","Ɵ","Ꝋ","Ꝍ","Ƣ","Ꝏ","Ȣ","Ｐ","Ṕ","Ṗ","Ƥ","Ᵽ","Ꝑ","Ꝓ","Ꝕ","Ｑ","Ꝗ","Ꝙ","Ɋ","Ｒ","Ŕ","Ṙ","Ř","Ȑ","Ȓ","Ṛ","Ṝ","Ŗ","Ṟ","Ɍ","Ɽ","Ꝛ","Ꞧ","Ꞃ","Ｓ","ẞ","Ś","Ṥ","Ŝ","Ṡ","Š","Ṧ","Ṣ","Ṩ","Ș","Ş","Ȿ","Ꞩ","Ꞅ","Ｔ","Ṫ","Ť","Ṭ","Ț","Ţ","Ṱ","Ṯ","Ŧ","Ƭ","Ʈ","Ⱦ","Ꞇ","Ꜩ","Ｕ","Ù","Ú","Û","Ũ","Ṹ","Ū","Ṻ","Ŭ","Ü","Ǜ","Ǘ","Ǖ","Ǚ","Ủ","Ů","Ű","Ǔ","Ȕ","Ȗ","Ư","Ừ","Ứ","Ữ","Ử","Ự","Ụ","Ṳ","Ų","Ṷ","Ṵ","Ʉ","Ｖ","Ṽ","Ṿ","Ʋ","Ꝟ","Ʌ","Ꝡ","Ｗ","Ẁ","Ẃ","Ŵ","Ẇ","Ẅ","Ẉ","Ⱳ","Ｘ","Ẋ","Ẍ","Ｙ","Ỳ","Ý","Ŷ","Ỹ","Ȳ","Ẏ","Ÿ","Ỷ","Ỵ","Ƴ","Ɏ","Ỿ","Ｚ","Ź","Ẑ","Ż","Ž","Ẓ","Ẕ","Ƶ","Ȥ","Ɀ","Ⱬ","Ꝣ","ａ","ẚ","à","á","â","ầ","ấ","ẫ","ẩ","ã","ā","ă","ằ","ắ","ẵ","ẳ","ȧ","ǡ","ä","ǟ","ả","å","ǻ","ǎ","ȁ","ȃ","ạ","ậ","ặ","ḁ","ą","ⱥ","ɐ","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ｂ","ḃ","ḅ","ḇ","ƀ","ƃ","ɓ","ｃ","ć","ĉ","ċ","č","ç","ḉ","ƈ","ȼ","ꜿ","ↄ","ｄ","ḋ","ď","ḍ","ḑ","ḓ","ḏ","đ","ƌ","ɖ","ɗ","ꝺ","ǳ","ǆ","ｅ","è","é","ê","ề","ế","ễ","ể","ẽ","ē","ḕ","ḗ","ĕ","ė","ë","ẻ","ě","ȅ","ȇ","ẹ","ệ","ȩ","ḝ","ę","ḙ","ḛ","ɇ","ɛ","ǝ","ｆ","ḟ","ƒ","ꝼ","ｇ","ǵ","ĝ","ḡ","ğ","ġ","ǧ","ģ","ǥ","ɠ","ꞡ","ᵹ","ꝿ","ｈ","ĥ","ḣ","ḧ","ȟ","ḥ","ḩ","ḫ","ẖ","ħ","ⱨ","ⱶ","ɥ","ƕ","ｉ","ì","í","î","ĩ","ī","ĭ","ï","ḯ","ỉ","ǐ","ȉ","ȋ","ị","į","ḭ","ɨ","ı","ｊ","ĵ","ǰ","ɉ","ｋ","ḱ","ǩ","ḳ","ķ","ḵ","ƙ","ⱪ","ꝁ","ꝃ","ꝅ","ꞣ","ｌ","ŀ","ĺ","ľ","ḷ","ḹ","ļ","ḽ","ḻ","ſ","ł","ƚ","ɫ","ⱡ","ꝉ","ꞁ","ꝇ","ǉ","ｍ","ḿ","ṁ","ṃ","ɱ","ɯ","ｎ","ǹ","ń","ñ","ṅ","ň","ṇ","ņ","ṋ","ṉ","ƞ","ɲ","ŉ","ꞑ","ꞥ","ǌ","ｏ","ò","ó","ô","ồ","ố","ỗ","ổ","õ","ṍ","ȭ","ṏ","ō","ṑ","ṓ","ŏ","ȯ","ȱ","ö","ȫ","ỏ","ő","ǒ","ȍ","ȏ","ơ","ờ","ớ","ỡ","ở","ợ","ọ","ộ","ǫ","ǭ","ø","ǿ","ɔ","ꝋ","ꝍ","ɵ","ƣ","ȣ","ꝏ","ｐ","ṕ","ṗ","ƥ","ᵽ","ꝑ","ꝓ","ꝕ","ｑ","ɋ","ꝗ","ꝙ","ｒ","ŕ","ṙ","ř","ȑ","ȓ","ṛ","ṝ","ŗ","ṟ","ɍ","ɽ","ꝛ","ꞧ","ꞃ","ｓ","ß","ś","ṥ","ŝ","ṡ","š","ṧ","ṣ","ṩ","ș","ş","ȿ","ꞩ","ꞅ","ẛ","ｔ","ṫ","ẗ","ť","ṭ","ț","ţ","ṱ","ṯ","ŧ","ƭ","ʈ","ⱦ","ꞇ","ꜩ","ｕ","ù","ú","û","ũ","ṹ","ū","ṻ","ŭ","ü","ǜ","ǘ","ǖ","ǚ","ủ","ů","ű","ǔ","ȕ","ȗ","ư","ừ","ứ","ữ","ử","ự","ụ","ṳ","ų","ṷ","ṵ","ʉ","ｖ","ṽ","ṿ","ʋ","ꝟ","ʌ","ꝡ","ｗ","ẁ","ẃ","ŵ","ẇ","ẅ","ẘ","ẉ","ⱳ","ｘ","ẋ","ẍ","ｙ","ỳ","ý","ŷ","ỹ","ȳ","ẏ","ÿ","ỷ","ẙ","ỵ","ƴ","ɏ","ỿ","ｚ","ź","ẑ","ż","ž","ẓ","ẕ","ƶ","ȥ","ɀ","ⱬ","ꝣ","Ά","Έ","Ή","Ί","Ϊ","Ό","Ύ","Ϋ","Ώ","ά","έ","ή","ί","ϊ","ΐ","ό","ύ","ϋ","ΰ","ω","ς","stripDiacritics","match","a","replace","defaultMatcher","value","toUpperCase","indexOf","defaultTypeAheadMatcher","startsWith"],"mappings":"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"}