{{#if (or @labelText @labelComponent)}}
  {{#let (if
    @labelComponent
    (component (ensure-safe-component @labelComponent))
    (component 'power-select/label')
  ) as |Label|}}
    <Label
      @select={{this.storedAPI}}
      @labelText={{@labelText}}
      @labelId={{this.labelId}}
      @triggerId={{this.triggerId}}
      @extra={{@extra}}
      class={{@labelClass}}
    />
  {{/let}}
{{/if}}
<BasicDropdown
  @horizontalPosition={{@horizontalPosition}}
  @destination={{@destination}}
  @initiallyOpened={{@initiallyOpened}}
  @matchTriggerWidth={{this.matchTriggerWidth}}
  @preventScroll={{or @preventScroll false}}
  @onClose={{this.handleClose}}
  @onOpen={{this.handleOpen}}
  @renderInPlace={{@renderInPlace}}
  @verticalPosition={{@verticalPosition}}
  @disabled={{@disabled}}
  @calculatePosition={{@calculatePosition}}
  @triggerComponent={{ensure-safe-component @ebdTriggerComponent}}
  @contentComponent={{ensure-safe-component @ebdContentComponent}}
  as |dropdown|>
  {{#let (assign dropdown (hash
    selected=this.selected
    highlighted=this.highlighted
    options=this.options
    results=this.results
    resultsCount=this.resultsCount
    loading=this.loading
    isActive=this.isActive
    searchText=this.searchText
    lastSearchedText=this.lastSearchedText
    actions=(assign dropdown.actions this._publicAPIActions)
  )) (concat "ember-power-select-options-" dropdown.uniqueId) as |publicAPI listboxId|}}
    {{!-- template-lint-disable no-positive-tabindex --}}
    <dropdown.Trigger
      @eventType={{or @eventType "mousedown"}}
      {{this.updateOptions @options}}
      {{this.updateSelected @selected}}
      {{this.updateRegisterAPI publicAPI}}
      {{this.updatePerformSearch this.searchText}}
      {{on "keydown" this.handleTriggerKeydown}}
      {{on "focus" this.handleFocus}}
      {{on "blur" this.handleBlur}}
      class="ember-power-select-trigger {{@triggerClass}}{{if publicAPI.isActive " ember-power-select-trigger--active"}}"
      aria-activedescendant={{if dropdown.isOpen (unless @searchEnabled (concat publicAPI.uniqueId "-" this.highlightedIndex))}}
      aria-controls={{if (and dropdown.isOpen (not @searchEnabled)) listboxId}}
      aria-describedby={{@ariaDescribedBy}}
      aria-haspopup={{unless @searchEnabled "listbox"}}
      aria-invalid={{@ariaInvalid}}
      aria-label={{@ariaLabel}}
      aria-labelledby={{this.ariaLabelledBy}}
      aria-owns={{if (and dropdown.isOpen (not @searchEnabled)) listboxId}}
      aria-required={{@required}}
      aria-autocomplete={{if @searchEnabled "list"}}
      role={{or @triggerRole "combobox"}}
      title={{@title}}
      id={{this.triggerId}}
      tabindex={{and (not @disabled) (or @tabindex "0")}}
      ...attributes
    >
      {{#let
        (if
          @triggerComponent
          (component (ensure-safe-component @triggerComponent))
          (component 'power-select/trigger')
        )
      as |Trigger|}}
        <Trigger
          @allowClear={{@allowClear}}
          @buildSelection={{@buildSelection}}
          @loadingMessage={{or @loadingMessage "Loading options..."}}
          @selectedItemComponent={{ensure-safe-component @selectedItemComponent}}
          @select={{publicAPI}}
          @searchEnabled={{@searchEnabled}}
          @searchField={{@searchField}}
          @onFocus={{this.handleFocus}}
          @onBlur={{this.handleBlur}}
          @extra={{@extra}}
          @listboxId={{listboxId}}
          @onInput={{this.handleInput}}
          @onKeydown={{this.handleKeydown}}
          @placeholder={{@placeholder}}
          @placeholderComponent={{if
            @placeholderComponent
            (ensure-safe-component @placeholderComponent)
            (component 'power-select/placeholder')
          }}
          @ariaActiveDescendant={{concat publicAPI.uniqueId "-" this.highlightedIndex}}
          @ariaLabelledBy={{this.ariaLabelledBy}}
          @ariaDescribedBy={{@ariaDescribedBy}}
          @ariaLabel={{@ariaLabel}}
          @role={{@triggerRole}}
          as |opt select|>
          {{yield opt select}}
        </Trigger>
      {{/let}}
    </dropdown.Trigger>
    <dropdown.Content
      class="ember-power-select-dropdown{{if publicAPI.isActive " ember-power-select-dropdown--active"}} {{@dropdownClass}}"
      @animationEnabled={{@animationEnabled}}
    >
      {{#if (not-eq @beforeOptionsComponent null)}}
        {{#let
          (if
            @beforeOptionsComponent
            (component (ensure-safe-component @beforeOptionsComponent))
            (component 'power-select/before-options')
          )
        as |BeforeOptions|}}
          <BeforeOptions
            @select={{publicAPI}}
            @searchEnabled={{@searchEnabled}}
            @onInput={{this.handleInput}}
            @onKeydown={{this.handleKeydown}}
            @onFocus={{this.handleFocus}}
            @onBlur={{this.handleBlur}}
            @placeholder={{@placeholder}}
            @placeholderComponent={{or @placeholderComponent (component 'power-select/placeholder')}}
            @extra={{@extra}}
            @listboxId={{listboxId}}
            @ariaActiveDescendant={{if this.highlightedIndex (concat publicAPI.uniqueId "-" this.highlightedIndex)}}
            @selectedItemComponent={{ensure-safe-component @selectedItemComponent}}
            @searchPlaceholder={{@searchPlaceholder}}
            @ariaLabel={{@ariaLabel}}
            @ariaLabelledBy={{this.ariaLabelledBy}}
            @ariaDescribedBy={{@ariaDescribedBy}}
            @triggerRole={{@triggerRole}}
          />
        {{/let}}
      {{/if}}
      {{#if this.mustShowSearchMessage}}
        {{#let
          (if
            @searchMessageComponent
            (component (ensure-safe-component @searchMessageComponent))
            (component 'power-select/search-message')
          )
        as |SearchMessage|}}
          <SearchMessage
            @searchMessage={{this.searchMessage}}
            @select={{publicAPI}}
            id={{listboxId}}
            aria-label={{@ariaLabel}}
            aria-labelledby={{this.ariaLabelledBy}}
          />
        {{/let}}
      {{else if this.mustShowNoMessages}}
        {{#let
          (if
            @noMatchesMessageComponent
            (component (ensure-safe-component @noMatchesMessageComponent))
            (component 'power-select/no-matches-message')
          )
         as |NoMatchesMessage|}}
          <NoMatchesMessage
            @noMatchesMessage={{this.noMatchesMessage}}
            @select={{publicAPI}}
            id={{listboxId}}
            aria-label={{@ariaLabel}}
            aria-labelledby={{this.ariaLabelledBy}}
          />
        {{/let}}
      {{else}}
        {{#let
          (if
            @optionsComponent
            (component (ensure-safe-component @optionsComponent))
            (component 'power-select/options')
          )
          (if
            @groupComponent
            (component (ensure-safe-component @groupComponent))
            (component 'power-select/power-select-group')
          )
        as |Options Group|}}
          <Options
            @loadingMessage={{or @loadingMessage "Loading options..."}}
            @select={{publicAPI}}
            @options={{publicAPI.results}}
            @groupIndex=""
            @optionsComponent={{Options}}
            @extra={{@extra}}
            @highlightOnHover={{this.highlightOnHover}}
            @groupComponent={{Group}}
            role="listbox"
            aria-multiselectable={{if this.ariaMultiSelectable "true"}}
            id={{listboxId}}
            class="ember-power-select-options" as |option select|>
            {{yield option select}}
          </Options>
        {{/let}}
      {{/if}}

      {{#if @afterOptionsComponent}}
        {{#let (component (ensure-safe-component @afterOptionsComponent)) as |AfterOptions|}}
          <AfterOptions
            @extra={{@extra}}
            @select={{publicAPI}}
          />
        {{/let}}
      {{/if}}
      <div role="status" aria-live="polite" aria-atomic="true" class="ember-power-select-visually-hidden">
        {{this.resultCountMessage}}
      </div>
    </dropdown.Content>
  {{/let}}
</BasicDropdown>