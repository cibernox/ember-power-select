{{#if (or @labelText @labelComponent)}}
  <this.labelComponent
    @select={{this.storedAPI}}
    @labelText={{@labelText}}
    @labelId={{this.labelId}}
    @triggerId={{this.triggerId}}
    @extra={{@extra}}
    class={{@labelClass}}
  />
{{/if}}
<BasicDropdown
  @horizontalPosition={{@horizontalPosition}}
  @destinationElement={{@destinationElement}}
  @destination={{@destination}}
  @initiallyOpened={{@initiallyOpened}}
  @matchTriggerWidth={{this.matchTriggerWidth}}
  @preventScroll={{or @preventScroll false}}
  @onClose={{this.handleClose}}
  @onOpen={{this.handleOpen}}
  @renderInPlace={{@renderInPlace}}
  @verticalPosition={{@verticalPosition}}
  @disabled={{@disabled}}
  @calculatePosition={{@calculatePosition}}
  @triggerComponent={{if
    @ebdTriggerComponent
    (ensure-safe-component @ebdTriggerComponent)
  }}
  @contentComponent={{if
    @ebdContentComponent
    (ensure-safe-component @ebdContentComponent)
  }}
  @rootEventType={{or @rootEventType "mousedown"}}
  as |dropdown|
>
  {{#let
    (this.publicAPI dropdown)
    (concat "ember-power-select-options-" dropdown.uniqueId)
    as |publicAPI listboxId|
  }}
    {{! template-lint-disable no-positive-tabindex }}
    <dropdown.Trigger
      @eventType={{or @eventType "mousedown"}}
      {{this.updateOptions @options}}
      {{this.updateSelected @selected}}
      {{this.updateRegisterAPI publicAPI}}
      {{this.updatePerformSearch this.searchText}}
      {{on "keydown" this.handleTriggerKeydown}}
      {{on "focus" this.handleFocus}}
      {{on "blur" this.handleBlur}}
      class="ember-power-select-trigger
        {{if @multiple ' ember-power-select-multiple-trigger'}}
        {{@triggerClass}}{{if
          publicAPI.isActive
          ' ember-power-select-trigger--active'
        }}"
      aria-activedescendant={{if
        dropdown.isOpen
        (unless
          @searchEnabled (concat publicAPI.uniqueId "-" this.highlightedIndex)
        )
      }}
      aria-controls={{if (and dropdown.isOpen (not @searchEnabled)) listboxId}}
      aria-describedby={{@ariaDescribedBy}}
      aria-haspopup={{unless @searchEnabled "listbox"}}
      aria-invalid={{@ariaInvalid}}
      aria-label={{@ariaLabel}}
      aria-labelledby={{this.ariaLabelledBy}}
      aria-owns={{if (and dropdown.isOpen (not @searchEnabled)) listboxId}}
      aria-required={{@required}}
      aria-autocomplete={{if @searchEnabled "list"}}
      role={{or @triggerRole "combobox"}}
      title={{@title}}
      id={{this.triggerId}}
      tabindex={{and (not @disabled) (or this.tabindex "0")}}
      ...attributes
    >
      <this.triggerComponent
        @allowClear={{@allowClear}}
        @buildSelection={{this.buildSelection}}
        @loadingMessage={{or @loadingMessage "Loading options..."}}
        @selectedItemComponent={{if
          @selectedItemComponent
          (ensure-safe-component @selectedItemComponent)
        }}
        @select={{publicAPI}}
        @searchEnabled={{@searchEnabled}}
        @searchField={{@searchField}}
        @searchFieldPosition={{this.searchFieldPosition}}
        @onFocus={{this.handleFocus}}
        @onBlur={{this.handleBlur}}
        @extra={{@extra}}
        @listboxId={{listboxId}}
        @onInput={{this.handleInput}}
        @onKeydown={{this.handleKeydown}}
        @placeholder={{@placeholder}}
        @searchPlaceholder={{@searchPlaceholder}}
        @placeholderComponent={{ensure-safe-component
          this.placeholderComponent
        }}
        @ariaActiveDescendant={{concat
          publicAPI.uniqueId
          "-"
          this.highlightedIndex
        }}
        @ariaLabelledBy={{this.ariaLabelledBy}}
        @ariaDescribedBy={{@ariaDescribedBy}}
        @ariaLabel={{@ariaLabel}}
        @role={{@triggerRole}}
        @tabindex={{@tabindex}}
        as |opt select|
      >
        {{yield opt select}}
      </this.triggerComponent>
    </dropdown.Trigger>
    <dropdown.Content
      class="ember-power-select-dropdown{{if
          publicAPI.isActive
          ' ember-power-select-dropdown--active'
        }}
        {{@dropdownClass}}"
      @animationEnabled={{@animationEnabled}}
    >
      {{#if (not-eq @beforeOptionsComponent null)}}
        <this.beforeOptionsComponent
          @select={{publicAPI}}
          @searchEnabled={{@searchEnabled}}
          @onInput={{this.handleInput}}
          @onKeydown={{this.handleKeydown}}
          @onFocus={{this.handleFocus}}
          @onBlur={{this.handleBlur}}
          @placeholder={{@placeholder}}
          @placeholderComponent={{ensure-safe-component
            this.placeholderComponent
          }}
          @extra={{@extra}}
          @listboxId={{listboxId}}
          @ariaActiveDescendant={{if
            this.highlightedIndex
            (concat publicAPI.uniqueId "-" this.highlightedIndex)
          }}
          @selectedItemComponent={{if
            @selectedItemComponent
            (ensure-safe-component @selectedItemComponent)
          }}
          @searchPlaceholder={{@searchPlaceholder}}
          @searchFieldPosition={{this.searchFieldPosition}}
          @ariaLabel={{@ariaLabel}}
          @ariaLabelledBy={{this.ariaLabelledBy}}
          @ariaDescribedBy={{@ariaDescribedBy}}
          @triggerRole={{@triggerRole}}
        />
      {{/if}}
      {{#if this.mustShowSearchMessage}}
        <this.searchMessageComponent
          @searchMessage={{this.searchMessage}}
          @select={{publicAPI}}
          id={{listboxId}}
          aria-label={{@ariaLabel}}
          aria-labelledby={{this.ariaLabelledBy}}
        />
      {{else if this.mustShowNoMessages}}
        <this.noMatchesMessageComponent
          @noMatchesMessage={{this.noMatchesMessage}}
          @select={{publicAPI}}
          id={{listboxId}}
          aria-label={{@ariaLabel}}
          aria-labelledby={{this.ariaLabelledBy}}
        />
      {{else}}
        <this.optionsComponent
          @loadingMessage={{or @loadingMessage "Loading options..."}}
          @select={{publicAPI}}
          @options={{publicAPI.results}}
          @groupIndex=""
          @optionsComponent={{ensure-safe-component this.optionsComponent}}
          @extra={{@extra}}
          @highlightOnHover={{this.highlightOnHover}}
          @groupComponent={{ensure-safe-component this.groupComponent}}
          role="listbox"
          aria-multiselectable={{if this.ariaMultiSelectable "true"}}
          id={{listboxId}}
          class="ember-power-select-options"
          as |option select|
        >
          {{yield option select}}
        </this.optionsComponent>
      {{/if}}

      {{#if @afterOptionsComponent}}
        {{#let
          (component (ensure-safe-component @afterOptionsComponent))
          as |AfterOptions|
        }}
          <AfterOptions @extra={{@extra}} @select={{publicAPI}} />
        {{/let}}
      {{/if}}
      <div
        role="status"
        aria-live="polite"
        aria-atomic="true"
        class="ember-power-select-visually-hidden"
      >
        {{this.resultCountMessage}}
      </div>
    </dropdown.Content>
  {{/let}}
</BasicDropdown>