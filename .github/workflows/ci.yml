name: CI

on:
  push:
    branches:
      - main
      - master
  pull_request: {}
  schedule:
    - cron: "0 3 * * 0" # every Sunday at 3am


concurrency:
  group: ci-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    name: "Tests"
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v3
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
          cache: npm
      - name: Install Dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Run Tests
        run: npm run test:ember

  floating:
    name: "Floating Dependencies"
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 14.x
          cache: npm
      - name: Install Dependencies
        run: npm install --no-shrinkwrap
      - name: Run Tests
        run: npm run test:ember

  try-scenarios:
    name: ${{ matrix.try-scenario }}
    runs-on: ubuntu-latest
    needs: "test"
    timeout-minutes: 10

    strategy:
      fail-fast: false
      matrix:
        try-scenario:
          - ember-lts-3.24
          - ember-lts-3.28
          - ember-release
          - ember-beta
          - ember-canary
          - ember-classic
          - embroider-safe
          - embroider-optimized

    steps:
      - uses: actions/checkout@v3
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
          cache: npm
      - name: Install Dependencies
        run: npm ci
      - name: Run Tests
        run: ./node_modules/.bin/ember try:one ${{ matrix.try-scenario }}

  publish:
    name: Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [test, floating, try-scenarios]

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Reconfigure git to use HTTP authentication
        run: >
          git config --global url."https://github.com/".insteadOf
          ssh://git@github.com/
      - uses: volta-cli/action@v1
      - run: npm install

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm run semantic-release
